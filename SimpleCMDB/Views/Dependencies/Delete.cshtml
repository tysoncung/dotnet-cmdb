@model SimpleCMDB.Models.Dependency

@{
    ViewData["Title"] = "Delete Dependency";
}

<h1>Delete Dependency</h1>

<div class="alert alert-danger">
    <h3>Are you sure you want to delete this dependency?</h3>
    <p>This action cannot be undone.</p>
</div>

<div>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.SourceService)
        </dt>
        <dd class="col-sm-10">
            @if(Model.SourceService != null)
            {
                <span>@Model.SourceService.ServiceName</span>
                @if(!string.IsNullOrEmpty(Model.SourceService.Server?.Hostname))
                {
                    <span class="text-muted"> (@Model.SourceService.Server.Hostname)</span>
                }
            }
        </dd>

        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.TargetService)
        </dt>
        <dd class="col-sm-10">
            @if(Model.TargetService != null)
            {
                <span>@Model.TargetService.ServiceName</span>
                @if(!string.IsNullOrEmpty(Model.TargetService.Server?.Hostname))
                {
                    <span class="text-muted"> (@Model.TargetService.Server.Hostname)</span>
                }
            }
        </dd>

        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Description)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Description)
        </dd>

        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.IsCritical)
        </dt>
        <dd class="col-sm-10">
            @if(Model.IsCritical)
            {
                <span class="badge bg-danger">Critical</span>
            }
            else
            {
                <span class="badge bg-secondary">Non-Critical</span>
            }
        </dd>

        @if(!string.IsNullOrEmpty(Model.Protocol))
        {
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Protocol)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Protocol)
            </dd>
        }

        @if(Model.Port.HasValue)
        {
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Port)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Port)
            </dd>
        }

        @if(!string.IsNullOrEmpty(Model.AuthType))
        {
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.AuthType)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.AuthType)
            </dd>
        }

        @if(!string.IsNullOrEmpty(Model.ServiceAccount))
        {
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.ServiceAccount)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.ServiceAccount)
            </dd>
        }

        @if(!string.IsNullOrEmpty(Model.Certificate))
        {
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Certificate)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Certificate)
            </dd>
        }

        @if(!string.IsNullOrEmpty(Model.ApiVersion))
        {
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.ApiVersion)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.ApiVersion)
            </dd>
        }

        @if(Model.TimeoutSeconds.HasValue)
        {
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.TimeoutSeconds)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.TimeoutSeconds) seconds
            </dd>
        }

        @if(Model.RetryCount.HasValue)
        {
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.RetryCount)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.RetryCount)
            </dd>
        }

        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.CreatedAt)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.CreatedAt)
        </dd>
    </dl>

    <form asp-action="Delete">
        <input type="hidden" asp-for="Id" />
        <input type="submit" value="Delete" class="btn btn-danger" />
        <a asp-action="Index" class="btn btn-secondary">Cancel</a>
    </form>
</div>